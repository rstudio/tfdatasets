on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '51 3 * * MON'

name: R-CMD-check

defaults:
  run:
    shell: Rscript {0}

jobs:
  R-CMD-check:
    name: ${{ matrix.os }}, tf-${{ matrix.tf }}, R-${{ matrix.r}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - {os: 'ubuntu-latest'  , tf: 'default', r: 'release'}
          - {os: 'windows-latest', tf: 'default', r: 'release'}
          - {os: 'macOS-latest'  , tf: 'default', r: 'release'}

          - {os: 'ubuntu-latest'  , tf: 'default', r: 'oldrel'}
          - {os: 'windows-latest', tf: 'default', r: 'oldrel'}
          - {os: 'macOS-latest'  , tf: 'default', r: 'oldrel'}

          # - {os: 'ubuntu-latest', tf: 'default', r: '3.6'} # default R in ubuntu-20.04

          # - {os: 'ubuntu-20.04'  , tf: 'release', r: 'release'}
          # - {os: 'windows-latest', tf: 'release', r: 'release'}
          # - {os: 'macOS-latest'  , tf: 'release', r: 'release'}

          - {os: 'ubuntu-latest', tf: '2.17', r: 'release'}
          - {os: 'ubuntu-latest', tf: '2.15', r: 'release'}
          - {os: 'ubuntu-latest', tf: '2.13', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: '2.7', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: '2.6', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: '2.5', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: '2.4', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: '2.3', r: 'release'}

          # these are allowed to fail
          # - {os: 'ubuntu-20.04', tf: 'default', r: 'devel'}
          # - {os: 'ubuntu-20.04', tf: '2.7.0rc1', r: 'release'}
          # - {os: 'ubuntu-20.04', tf: 'nightly' , r: 'release'}

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.tf == 'nightly' || contains(matrix.tf, 'rc') || matrix.r == 'devel' }}
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: 'true'
      R_COMPILE_AND_INSTALL_PACKAGES: 'never'
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
          r-version: ${{ matrix.r }}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck, local::.
          needs: check
          cache-version: 1
          upgrade: 'TRUE'

      - name: Install Tensorflow
        run: tensorflow::install_tensorflow(version = '${{ matrix.python }}')

      - uses: r-lib/actions/check-r-package@v2
